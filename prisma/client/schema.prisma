// This is a simplified copy of prisma schema from ApirlNEA/ChatGPT-Admin-Web@175324a

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["deno"]
  output          = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =======
// ｜User｜
// =======

enum Role {
  Admin
  Mod
  Sell
  User
}

model User {
  id    Int     @id @default(autoincrement())
  role  Role    @default(User)
  name  String  @unique // 用户名
  email String? @unique // 邮箱
  phone String? @unique // 手机 +86

  password String? @db.Text // 密码

  // relation
  orders Order[]

  createdAt DateTime @default(now()) @db.Timestamp(6) // 注册时间
  updatedAt DateTime @default(now()) @updatedAt
  isBlocked Boolean  @default(false) // 是否被封禁
}

// ==========
// ｜Product｜
// ==========
model Model {
  id   Int    @id @default(autoincrement())
  name String @unique

  price Int // 单位为分

  // relation
  products ModelInProduct[]

  @@unique([id, name])
}

model Product {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  features String[]

  isHidden Boolean @default(false) // 是否隐藏

  price    Int // 单位为分
  stock    Int @default(-1) // 库存
  duration Int // 产品的持续时间

  models ModelInProduct[]

  // relation
  order      Order[]
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model ModelInProduct {
  // 在duration时间内限制使用times次
  times    Int // 限制次数
  duration Int // 单位为秒，限制持续时间 若为 0 则不限制 如每三小时小时

  // 对应的 Model
  model   Model @relation(fields: [modelId], references: [id])
  modelId Int

  // 对应的 Product
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@id([modelId, productId])
}

// 产品分类
model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  products Product[]
}

enum OrderStatus {
  Pending // 待支付
  Paid // 已支付
  Failed // 支付失败
  Refunded // 已退款
}

enum OrderType {
  Subscription // 订阅
  OneTime // 一次性
}

// 订单
model Order {
  id     String      @id @unique
  type   OrderType
  status OrderStatus @default(Pending)

  count  Int @default(1) // 数量
  amount Int // 订单金额，单位为分

  startAt DateTime?
  endAt   DateTime?

  isCurrent Boolean @default(false) // 是否为当前订单

  // relation

  user   User @relation(fields: [userId], references: [id])
  userId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  // metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  rawData Json? // 支付的原始数据
}
